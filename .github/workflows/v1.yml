name: "Build & Release"

on:
  push:
    branches:
      - main

permissions:
  contents: write    # Grants write access to create releases
  actions: write     # Grants access for GitHub Actions

jobs:
  build:
    name: Build APK
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.3'
          channel: 'stable'
          architecture: x64

      - run: flutter clean
      - run: flutter pub get

      - run: flutter build apk --release

    outputs:
      apk_path: build/app/outputs/apk/release/app-release.apk

  release:
    name: Release APK
    runs-on: macos-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ needs.build.outputs.apk_path }}
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: false
          makeLatest: true

  fastlane:
    name: Fastlane Firebase Distribution & Play Store Deploy
    runs-on: macos-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      # Use the built APK from the 'build' job to avoid duplicating Flutter setup
      - name: Use APK from Build
        run: echo "Using APK from build at ${{ needs.build.outputs.apk_path }}"

      # Setup Ruby environment
      - name: Setup Ruby environment
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.5'
          bundler-cache: true
          working-directory: android

      # Firebase Distribution
      - name: Fastlane Firebase Distribution
        env:
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
        run: |
          bundle exec fastlane firebase_distribution
        working-directory: android
